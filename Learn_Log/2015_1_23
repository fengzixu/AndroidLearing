title:事件的创建,Intent传递
author:

想在程序内创建一个事件的话，需要以下几个步骤：
1.事件的发生对象
2.设置监听这个事件的函数
3.事件的逻辑代码
(人物，地点，干什么)



Intent就是一种特殊的数据结构，用于在不同的activiy中传递信息。
如果想要在不同的activity之间进行切换的话，就会需要用到intent，而且要注意的是，在一个程序内创建多个activity要记得在manifest文件中进行注册。


在进行activity切换的时候，很可能需要向下一个activity传递一些信息.这些传递信息的操作就需要利用intent来实现。传递消息也有几种形式，比如利用putextra,或者利用bunlde对象来进行传递，接收的时候就用getexrta,get数据类型的API来进行实现。


上述传递信息的方式，旧的活动向新的活动传递信息，但是，新的活动，没办法在被调用之后返回给他的调用者一些数据。如果有这样的需求，就可以用到startactivityforresult来进行。

这里要注意一点的是，如果有多个activity，上面都有同一种类型的控件，那么他们的Id不能相同，要保证在整个程序内的唯一性。



关于activity传递，以及返回值和数据的发送：


一般来说，在执行活动切换的时候，使用的是intent对象，在构建的时候，就可以设置他的起点和终点。
Intent m_intent = new Intent(MainActivity.this, SecondActivity.class);
如果是单纯的切换活动，那么接下来用startactivity就可以实现。

如果想在切换活动的同时传入数据的话，就要利用putextra，参数是一个键值对，类似于字典的形式.这样的话，在新的activity中，就可以用getintent来获取传递数据的intene，然后用getextra，来获取所要传递的那个数据的集合，进而再利用get数据类型的方式来获取到集合中特定的数据。

_intent = this.getIntent();
str = _intent.getExtras().getString("xuran");


如果整个活动的切换是从A到B进行的，A调用B的执行时候，需要在B结束的时候返回给A一些数据，这时就不能再用startactivity，而要利用Startactivityforresult，参数多出了一个消息码，可以指定任意的正数，然后来唯一的标识这一次传递的信息。

而在B中，可以通过intent把要返回的数据装进去，然后通过setresult这个函数返回。其中的返回消息码和发送消息码没有必要一致。可以在被调用的activity的最后调用finish函数来关闭这个活动。


返回给A中的返回值，要靠一个函数来进行接受，这个函数是默认执行的,也就是说，如果启动activity用的是forresult那个方法的话，那么在新的活动返回值的时候，就必须要重写这个函数onActivityResult.
该函数接收三个参数，请求码，结果码，还有传递回来的intent.主要是进行判断，结果码是不是我们在执行setresult函数中指定的那个结果码。然后就可以像之前一样，取出放在intent里面的数据，然后予以显示等等的操作









